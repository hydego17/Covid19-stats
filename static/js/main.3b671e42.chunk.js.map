{"version":3,"sources":["components/Cards/Cards.module.css","images/image1.jpg","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","images/virus.svg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","blueBg","Typography","gutterBottom","h1","variant","start","end","value","duration","separator","h2","Date","toLocaleDateString","greenBg","redBg","url","fetchData","country","a","switchUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","lebel","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","Select","native","defaultValue","onChange","e","target","option","i","key","App","state","fetchedData","setState","this","wrapper","covid","src","covidImg","alt","desc","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b671e42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1SBho\",\"h1\":\"Cards_h1__pj9zJ\",\"h2\":\"Cards_h2__MIypB\",\"card\":\"Cards_card__2-3gr\",\"blueBg\":\"Cards_blueBg__1-QkT\",\"greenBg\":\"Cards_greenBg__8P7Ru\",\"redBg\":\"Cards_redBg__3S2-C\",\"infected\":\"Cards_infected__1eAvC\",\"recovered\":\"Cards_recovered__ztabS\",\"deaths\":\"Cards_deaths__2uSPI\",\"loading\":\"Cards_loading__2axyd\"};","module.exports = __webpack_public_path__ + \"static/media/image1.2576fc59.jpg\";","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent className={styles.blueBg}>\r\n            <Typography gutterBottom className={styles.h1}>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography className={styles.h2}>\r\n              Per {new Date(lastUpdate).toLocaleDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent className={styles.greenBg}>\r\n            <Typography gutterBottom className={styles.h1}>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography className={styles.h2}>\r\n              Per {new Date(lastUpdate).toLocaleDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries of covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent className={styles.redBg}>\r\n            <Typography gutterBottom className={styles.h1}>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography className={styles.h2}>\r\n              Per {new Date(lastUpdate).toLocaleDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let switchUrl = url;\r\n\r\n  if (country) {\r\n    switchUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(switchUrl);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"rgb(20, 147, 231)\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            lebel: \"People\",\r\n            backgroundColor: [\r\n              \"rgb(20, 147, 231)\",\r\n              \"rgb(15, 189, 15)\",\r\n              \"rgb(255, 79, 79)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, Select, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.label}>\r\n        <span>Show data from: </span>\r\n      </div>\r\n\r\n      <FormControl variant=\"outlined\" className={styles.formControl}>\r\n        <Select\r\n          native\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n        >\r\n          <option className={styles.option} value=\"\">\r\n            Global\r\n          </option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\n\r\nimport covidImg from \"./images/virus.svg\";\r\nimport image from \"./images/image1.jpg\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n    //set the state\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.wrapper}>\r\n          <img className={styles.covid} src={covidImg} alt=\"covid-19\" />\r\n          <h1> COVID-19</h1>\r\n        </div>\r\n\r\n        <div className={styles.desc}>Current data:</div>\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n\r\n        <div>\r\n          <span>\r\n            {\" \"}\r\n            Sourced from:{\" \"}\r\n            <a href=\"https://covid19.mathdro.id/api\" target=\"_blank\">\r\n              https://covid19.mathdro.id/api\r\n            </a>\r\n          </span>\r\n        </div>\r\n        {/* <img className={styles.img} src={image}></img> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3NViO\",\"wrapper\":\"App_wrapper__2kYrs\",\"covid\":\"App_covid__34DP6\",\"desc\":\"App_desc__lbbPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3iNM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1QE3R\"};","module.exports = __webpack_public_path__ + \"static/media/virus.469b8a44.svg\";"],"sourceRoot":""}